{"ast":null,"code":"import _objectSpread from \"/Users/dy/Desktop/react-course/qwerty-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nimport { auth, gooleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth, addtionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, addtionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(gooleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(signUpSuccess({\n      user,\n      addtionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    addtionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, addtionalData);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/Users/dy/Desktop/react-course/qwerty-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","auth","gooleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","addtionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","user","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { \n  signInSuccess, \n  signInFailure, \n  signOutSuccess, \n  signOutFailure, \n  signUpSuccess,\n  signUpFailure \n} from './user.actions';\nimport { \n  auth, \n  gooleProvider, \n  createUserProfileDocument,\n  getCurrentUser\n} from '../../firebase/firebase.utils';\n\nexport function* getSnapshotFromUserAuth(userAuth, addtionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, addtionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(\n      signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    );\n  } catch(error) {\n    yield put(signInFailure(error));\n  } \n}\n\nexport function* signInWithGoogle() {\n  try {\n    const {user} = yield auth.signInWithPopup(gooleProvider);\n    yield getSnapshotFromUserAuth(user)\n  } catch(error) {\n    yield put(signInFailure(error));\n  } \n}\n\nexport function* signInWithEmail({payload: {email, password}}) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch(error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch(error){\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch(error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport function* signUp({payload: { email, password, displayName }}) {\n  try{\n    const { user } = yield auth.createUserWithEmailAndPassword(\n      email, \n      password\n    );\n    yield put(signUpSuccess({ user, addtionalData: { displayName } }));\n  } catch(error) {\n    yield put(signUpFailure(error))\n  }\n}\n\nexport function* signInAfterSignUp({ payload: { user, addtionalData } }) {\n  yield getSnapshotFromUserAuth(user, addtionalData);\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START,signUp);\n}\n\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp)\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart), \n    call(onEmailSignInStart),\n    call(isUserAuthenticated),\n    call(onSignOutStart),\n    call(onSignUpStart),\n    call(onSignUpSuccess)\n  ]);\n}"]},"metadata":{},"sourceType":"module"}